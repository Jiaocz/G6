{"version":3,"sources":["docs/api/layouts/CircularLayout.zh.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/api/layouts/CircularLayout.zh.md?watch=parent';\n  export const texts = [{\"value\":\"示例\",\"paraId\":0},{\"value\":\"// Assign layout options when initialization. const layout = new CircularLayout(\",\"paraId\":1},{\"value\":\"{ radius: 10 }\",\"paraId\":1},{\"value\":\"); const positions = await layout.execute(graph); // { nodes: [], edges: [] }\",\"paraId\":1},{\"value\":\"// Or use different options later. const layout = new CircularLayout(\",\"paraId\":2},{\"value\":\"{ radius: 10 }\",\"paraId\":2},{\"value\":\"); const positions = await layout.execute(graph, { radius: 20 }\",\"paraId\":2},{\"value\":\"); // { nodes: [], edges: [] }\",\"paraId\":2},{\"value\":\"// If you want to assign the positions directly to the nodes, use assign method. await layout.assign(graph, { radius: 20 }\",\"paraId\":3},{\"value\":\");\",\"paraId\":3},{\"value\":\"number\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"从第一个节点到最后节点之间相隔多少个 2*PI\",\"paraId\":5,\"tocIndex\":1},{\"value\":\"PointTuple\",\"paraId\":6,\"tocIndex\":2},{\"value\":\"布局的中心\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"boolean\",\"paraId\":8,\"tocIndex\":3},{\"value\":\"是否顺时针排列\",\"paraId\":9,\"tocIndex\":3},{\"value\":\"number\",\"paraId\":10,\"tocIndex\":4},{\"value\":\"节点在环上的分段数（几个段将均匀分布）\",\"paraId\":11,\"tocIndex\":4},{\"value\":\" 在 endRadius - startRadius != 0 时生效\",\"paraId\":12,\"tocIndex\":4},{\"value\":\"number\",\"paraId\":13,\"tocIndex\":5},{\"value\":\"结束角度\",\"paraId\":14,\"tocIndex\":5},{\"value\":\"number | null\",\"paraId\":15,\"tocIndex\":6},{\"value\":\"螺旋状布局的结束半径\",\"paraId\":16,\"tocIndex\":6},{\"value\":\"number\",\"paraId\":17,\"tocIndex\":7},{\"value\":\"布局的高度\",\"paraId\":18,\"tocIndex\":7},{\"value\":\"number | number[] | ((nodeData:\",\"paraId\":19,\"tocIndex\":8},{\"value\":\" \",\"paraId\":19,\"tocIndex\":8},{\"value\":\"Node\",\"paraId\":19,\"tocIndex\":8},{\"value\":\") => number)\",\"paraId\":19,\"tocIndex\":8},{\"value\":\"节点大小（直径）。用于防止节点重叠时的碰撞检测\",\"paraId\":20,\"tocIndex\":8},{\"value\":\"((node?:\",\"paraId\":21,\"tocIndex\":9},{\"value\":\" \",\"paraId\":21,\"tocIndex\":9},{\"value\":\"Node\",\"paraId\":21,\"tocIndex\":9},{\"value\":\") => number) | number\",\"paraId\":21,\"tocIndex\":9},{\"value\":\"环与环之间最小间距，用于调整半径\",\"paraId\":22,\"tocIndex\":9},{\"value\":\"'topology' | 'topology-directed' | 'degree' | null\",\"paraId\":23,\"tocIndex\":10},{\"value\":\"节点在环上排序的依据\",\"paraId\":24,\"tocIndex\":10},{\"value\":\"null: 直接使用数据中的顺序\",\"paraId\":25,\"tocIndex\":10},{\"value\":\"'topology': 按照拓扑排序\",\"paraId\":26,\"tocIndex\":10},{\"value\":\"'topology-directed': 按照拓扑排序（有向图）\",\"paraId\":27,\"tocIndex\":10},{\"value\":\"'degree': 按照度数大小排序 \",\"paraId\":28,\"tocIndex\":10},{\"value\":\" Sorting basis of nodes on the ring\",\"paraId\":28,\"tocIndex\":10},{\"value\":\"null: Use the order in the data directly\",\"paraId\":29,\"tocIndex\":10},{\"value\":\"'topology': Sort according to topological order\",\"paraId\":30,\"tocIndex\":10},{\"value\":\"'topology-directed': Sort according to topological order (directed graph)\",\"paraId\":31,\"tocIndex\":10},{\"value\":\"'degree': Sort according to degree size null\",\"paraId\":32,\"tocIndex\":10},{\"value\":\"number | null\",\"paraId\":33,\"tocIndex\":11},{\"value\":\"圆的半径\",\"paraId\":34,\"tocIndex\":11},{\"value\":\" 若设置了 radius，则 startRadius 与 endRadius 不生效\",\"paraId\":35,\"tocIndex\":11},{\"value\":\"number\",\"paraId\":36,\"tocIndex\":12},{\"value\":\"起始角度\",\"paraId\":37,\"tocIndex\":12},{\"value\":\"number | null\",\"paraId\":38,\"tocIndex\":13},{\"value\":\"螺旋状布局的起始半径\",\"paraId\":39,\"tocIndex\":13},{\"value\":\"number\",\"paraId\":40,\"tocIndex\":14},{\"value\":\"布局的宽度\",\"paraId\":41,\"tocIndex\":14},{\"value\":\"To directly assign the positions to the nodes.\",\"paraId\":42,\"tocIndex\":16},{\"value\":\"assign(graph: Graph, options?: CircularLayoutOptions): Promise<void>;\\n\",\"paraId\":43,\"tocIndex\":16},{\"value\":\"相关参数\",\"paraId\":44},{\"value\":\"参数\",\"paraId\":45,\"tocIndex\":16},{\"value\":\"类型\",\"paraId\":46,\"tocIndex\":16},{\"value\":\"描述\",\"paraId\":47,\"tocIndex\":16},{\"value\":\"graph\",\"paraId\":48,\"tocIndex\":16},{\"value\":\"Graph\",\"paraId\":49,\"tocIndex\":16},{\"value\":\"options\",\"paraId\":50,\"tocIndex\":16},{\"value\":\"CircularLayoutOptions\",\"paraId\":51,\"tocIndex\":16},{\"value\":\"返回值\",\"paraId\":52,\"tocIndex\":16},{\"value\":\"：\",\"paraId\":52,\"tocIndex\":16},{\"value\":\"类型：\",\"paraId\":53,\"tocIndex\":16},{\"value\":\"Promise<void>\",\"paraId\":53,\"tocIndex\":16},{\"value\":\"Return the positions of nodes and edges(if needed).\",\"paraId\":54,\"tocIndex\":17},{\"value\":\"execute(graph: Graph, options?: CircularLayoutOptions): Promise<LayoutMapping>;\\n\",\"paraId\":55,\"tocIndex\":17},{\"value\":\"相关参数\",\"paraId\":44},{\"value\":\"参数\",\"paraId\":56,\"tocIndex\":17},{\"value\":\"类型\",\"paraId\":57,\"tocIndex\":17},{\"value\":\"描述\",\"paraId\":58,\"tocIndex\":17},{\"value\":\"graph\",\"paraId\":59,\"tocIndex\":17},{\"value\":\"Graph\",\"paraId\":60,\"tocIndex\":17},{\"value\":\"options\",\"paraId\":61,\"tocIndex\":17},{\"value\":\"CircularLayoutOptions\",\"paraId\":62,\"tocIndex\":17},{\"value\":\"返回值\",\"paraId\":63,\"tocIndex\":17},{\"value\":\"：\",\"paraId\":63,\"tocIndex\":17},{\"value\":\"类型：\",\"paraId\":64,\"tocIndex\":17},{\"value\":\"Promise<LayoutMapping>\",\"paraId\":64,\"tocIndex\":17}];\n  "],"names":[],"mappings":"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"}