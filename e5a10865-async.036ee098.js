(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["e5a10865"],{e5a10865:function(a,e,t){"use strict";t.d(e,"__esModule",{value:!0}),t.d(e,"texts",{enumerable:!0,get:function(){return o;}}),t("81e628de");let o=[{value:"Example",paraId:0},{value:"// Assign layout options when initialization. const layout = new RandomLayout(",paraId:1},{value:"{ center: [100, 100] }",paraId:1},{value:"); const positions = await layout.execute(graph); // { nodes: [], edges: [] }",paraId:1},{value:"// Or use different options later. const layout = new RandomLayout(",paraId:2},{value:"{ center: [100, 100] }",paraId:2},{value:"); const positions = await layout.execute(graph, { center: [100, 100] }",paraId:2},{value:"); // { nodes: [], edges: [] }",paraId:2},{value:"// If you want to assign the positions directly to the nodes, use assign method. await layout.assign(graph, { center: [100, 100] }",paraId:3},{value:");",paraId:3},{value:"PointTuple",paraId:4,tocIndex:1},{value:"Layout center",paraId:5,tocIndex:1},{value:"number",paraId:6,tocIndex:2},{value:"Layout height range",paraId:7,tocIndex:2},{value:"number",paraId:8,tocIndex:3},{value:"Layout width range",paraId:9,tocIndex:3},{value:"To directly assign the positions to the nodes.",paraId:10,tocIndex:5},{value:"assign(graph: Graph, options?: RandomLayoutOptions): Promise<void>;\n",paraId:11,tocIndex:5},{value:"View Parameters",paraId:12},{value:"Parameter",paraId:13,tocIndex:5},{value:"Type",paraId:14,tocIndex:5},{value:"Description",paraId:15,tocIndex:5},{value:"graph",paraId:16,tocIndex:5},{value:"Graph",paraId:17,tocIndex:5},{value:"options",paraId:18,tocIndex:5},{value:"RandomLayoutOptions",paraId:19,tocIndex:5},{value:"Returns",paraId:20,tocIndex:5},{value:":",paraId:20,tocIndex:5},{value:"Type:",paraId:21,tocIndex:5},{value:" Promise<void>",paraId:21,tocIndex:5},{value:"Return the positions of nodes and edges(if needed).",paraId:22,tocIndex:6},{value:"execute(graph: Graph, options?: RandomLayoutOptions): Promise<LayoutMapping>;\n",paraId:23,tocIndex:6},{value:"View Parameters",paraId:12},{value:"Parameter",paraId:24,tocIndex:6},{value:"Type",paraId:25,tocIndex:6},{value:"Description",paraId:26,tocIndex:6},{value:"graph",paraId:27,tocIndex:6},{value:"Graph",paraId:28,tocIndex:6},{value:"options",paraId:29,tocIndex:6},{value:"RandomLayoutOptions",paraId:30,tocIndex:6},{value:"Returns",paraId:31,tocIndex:6},{value:":",paraId:31,tocIndex:6},{value:"Type:",paraId:32,tocIndex:6},{value:" Promise<LayoutMapping>",paraId:32,tocIndex:6}];}}]);
//# sourceMappingURL=e5a10865-async.036ee098.js.map