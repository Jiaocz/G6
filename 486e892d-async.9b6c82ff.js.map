{"version":3,"sources":["docs/api/layouts/GridLayout.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/api/layouts/GridLayout.en.md?watch=parent';\n  export const texts = [{\"value\":\"Example\",\"paraId\":0},{\"value\":\"// Assign layout options when initialization. const layout = new GridLayout(\",\"paraId\":1},{\"value\":\"{ rows: 10 }\",\"paraId\":1},{\"value\":\"); const positions = await layout.execute(graph); // { nodes: [], edges: [] }\",\"paraId\":1},{\"value\":\"// Or use different options later. const layout = new GridLayout(\",\"paraId\":2},{\"value\":\"{ rows: 10 }\",\"paraId\":2},{\"value\":\"); const positions = await layout.execute(graph, { rows: 20 }\",\"paraId\":2},{\"value\":\"); // { nodes: [], edges: [] }\",\"paraId\":2},{\"value\":\"// If you want to assign the positions directly to the nodes, use assign method. await layout.assign(graph, { rows: 20 }\",\"paraId\":3},{\"value\":\");\",\"paraId\":3},{\"value\":\"PointTuple\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"Grid layout starting position (upper left corner) [0, 0]\",\"paraId\":5,\"tocIndex\":1},{\"value\":\"number\",\"paraId\":6,\"tocIndex\":2},{\"value\":\"Number of columns in the grid. It is calculated automatically when it is undefined and the number of nodes, layout space, and rows (if specified) are specified undefined\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"boolean\",\"paraId\":8,\"tocIndex\":3},{\"value\":\"When false, it means to use all available canvas space. When true, it means to use the smallest canvas space false\",\"paraId\":9,\"tocIndex\":3},{\"value\":\"number\",\"paraId\":10,\"tocIndex\":4},{\"value\":\"Total height of grid layout\",\"paraId\":11,\"tocIndex\":4},{\"value\":\" The height of the grid layout is the default value of the current container height in G6. The default value is 300 when this layout is used alone 300\",\"paraId\":12,\"tocIndex\":4},{\"value\":\"number | number[] | ((nodeData:\",\"paraId\":13,\"tocIndex\":5},{\"value\":\" \",\"paraId\":13,\"tocIndex\":5},{\"value\":\"Node\",\"paraId\":13,\"tocIndex\":5},{\"value\":\") => number)\",\"paraId\":13,\"tocIndex\":5},{\"value\":\"Node size (diameter). Used for collision detection when nodes overlap\",\"paraId\":14,\"tocIndex\":5},{\"value\":\"((node?:\",\"paraId\":15,\"tocIndex\":6},{\"value\":\" \",\"paraId\":15,\"tocIndex\":6},{\"value\":\"Node\",\"paraId\":15,\"tocIndex\":6},{\"value\":\") => number) | number\",\"paraId\":15,\"tocIndex\":6},{\"value\":\"Minimum spacing between rings, used to adjust the radius\",\"paraId\":16,\"tocIndex\":6},{\"value\":\"(node?:\",\"paraId\":17,\"tocIndex\":7},{\"value\":\" \",\"paraId\":17,\"tocIndex\":7},{\"value\":\"Node\",\"paraId\":17,\"tocIndex\":7},{\"value\":\") => { row?: number; col?: number; }\",\"paraId\":17,\"tocIndex\":7},{\"value\":\"Specify the row and column where each node is located undefined\",\"paraId\":18,\"tocIndex\":7},{\"value\":\"boolean\",\"paraId\":19,\"tocIndex\":8},{\"value\":\"Whether to prevent overlap\",\"paraId\":20,\"tocIndex\":8},{\"value\":\" Must be used with the following properties: nodeSize or data.size in the data. When data.size is set or nodeSize is configured with the same value as the current graph node size in the layout, the collision detection of node overlap can be performed false\",\"paraId\":21,\"tocIndex\":8},{\"value\":\"number\",\"paraId\":22,\"tocIndex\":9},{\"value\":\"Padding between nodes to prevent overlap. It takes effect when preventOverlap is true 10\",\"paraId\":23,\"tocIndex\":9},{\"value\":\"number\",\"paraId\":24,\"tocIndex\":10},{\"value\":\"Number of rows in the grid. It is calculated automatically when it is undefined and the number of nodes, layout space, and cols (if specified) are specified 10\",\"paraId\":25,\"tocIndex\":10},{\"value\":\"string\",\"paraId\":26,\"tocIndex\":11},{\"value\":\"Specify the basis for sorting (node attribute name). The higher the value, the more the node will be placed in the center. If it is undefined, the degree of the node will be calculated, and the higher the degree, the more the node will be placed in the center undefined\",\"paraId\":27,\"tocIndex\":11},{\"value\":\"number\",\"paraId\":28,\"tocIndex\":12},{\"value\":\"Total width of grid layout\",\"paraId\":29,\"tocIndex\":12},{\"value\":\" The width of the grid layout is the default value of the current container width in G6. The default value is 300 when this layout is used alone 300\",\"paraId\":30,\"tocIndex\":12},{\"value\":\"To directly assign the positions to the nodes.\",\"paraId\":31,\"tocIndex\":14},{\"value\":\"assign(graph: Graph, options?: GridLayoutOptions): Promise<void>;\\n\",\"paraId\":32,\"tocIndex\":14},{\"value\":\"View Parameters\",\"paraId\":33},{\"value\":\"Parameter\",\"paraId\":34,\"tocIndex\":14},{\"value\":\"Type\",\"paraId\":35,\"tocIndex\":14},{\"value\":\"Description\",\"paraId\":36,\"tocIndex\":14},{\"value\":\"graph\",\"paraId\":37,\"tocIndex\":14},{\"value\":\"Graph\",\"paraId\":38,\"tocIndex\":14},{\"value\":\"options\",\"paraId\":39,\"tocIndex\":14},{\"value\":\"GridLayoutOptions\",\"paraId\":40,\"tocIndex\":14},{\"value\":\"Returns\",\"paraId\":41,\"tocIndex\":14},{\"value\":\":\",\"paraId\":41,\"tocIndex\":14},{\"value\":\"Type:\",\"paraId\":42,\"tocIndex\":14},{\"value\":\" Promise<void>\",\"paraId\":42,\"tocIndex\":14},{\"value\":\"Return the positions of nodes and edges(if needed).\",\"paraId\":43,\"tocIndex\":15},{\"value\":\"execute(graph: Graph, options?: GridLayoutOptions): Promise<LayoutMapping>;\\n\",\"paraId\":44,\"tocIndex\":15},{\"value\":\"View Parameters\",\"paraId\":33},{\"value\":\"Parameter\",\"paraId\":45,\"tocIndex\":15},{\"value\":\"Type\",\"paraId\":46,\"tocIndex\":15},{\"value\":\"Description\",\"paraId\":47,\"tocIndex\":15},{\"value\":\"graph\",\"paraId\":48,\"tocIndex\":15},{\"value\":\"Graph\",\"paraId\":49,\"tocIndex\":15},{\"value\":\"options\",\"paraId\":50,\"tocIndex\":15},{\"value\":\"GridLayoutOptions\",\"paraId\":51,\"tocIndex\":15},{\"value\":\"Returns\",\"paraId\":52,\"tocIndex\":15},{\"value\":\":\",\"paraId\":52,\"tocIndex\":15},{\"value\":\"Type:\",\"paraId\":53,\"tocIndex\":15},{\"value\":\" Promise<LayoutMapping>\",\"paraId\":53,\"tocIndex\":15}];\n  "],"names":[],"mappings":"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"}