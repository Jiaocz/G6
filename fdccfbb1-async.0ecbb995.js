(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["fdccfbb1"],{fdccfbb1:function(e,a,o){"use strict";o.d(a,"__esModule",{value:!0}),o.d(a,"texts",{enumerable:!0,get:function(){return n;}}),o("8bc4313e");let n=[{value:"createGraph(\n  {\n    data: {\n      nodes: [\n        { id: 'node1', combo: 'combo1', style: { x: 250, y: 150 } },\n        { id: 'node2', combo: 'combo1', style: { x: 350, y: 150 } },\n        { id: 'node3', combo: 'combo2', style: { x: 250, y: 300 } },\n      ],\n      combos: [\n        { id: 'combo1', combo: 'combo2' },\n        { id: 'combo2', style: {} },\n      ],\n    },\n    combo: {\n      style: {\n        labelText: (d) => d.id,\n        labelPadding: [1, 5],\n        labelFill: '#fff',\n        labelBackground: true,\n        labelBackgroundRadius: 10,\n        labelBackgroundFill: '#7863FF',\n      },\n    },\n    behaviors: ['collapse-expand'],\n    plugins: ['grid-line'],\n    animation: true,\n  },\n  { width: 600, height: 400 },\n  (gui, graph) => {\n    const options = {\n      collapsed: false,\n      collapsedSize: 32,\n      collapsedMarker: true,\n      collapsedMarkerFontSize: 12,\n      collapsedMarkerType: 'child-count',\n    };\n\n    const optionFolder = gui.addFolder('combo2.style');\n\n    optionFolder.add(options, 'collapsed');\n    optionFolder.add(options, 'collapsedSize', 0, 100, 1);\n    optionFolder.add(options, 'collapsedMarker');\n    optionFolder.add(options, 'collapsedMarkerFontSize', 12, 20, 1);\n    optionFolder.add(options, 'collapsedMarkerType', ['child-count', 'descendant-count', 'node-count']);\n\n    optionFolder.onChange(({ property, value }) => {\n      graph.updateComboData([{ id: 'combo2', style: { [property]: value } }]);\n      graph.render();\n    });\n  },\n);\n",paraId:0},{value:"NodeData | ComboData",paraId:1,tocIndex:0},{value:"[]",paraId:1,tocIndex:0},{value:"The data of the children of combo",paraId:2,tocIndex:0},{value:" If the combo is collapsed, children may be empty, and the complete child element data can be obtained through childrenData",paraId:3,tocIndex:0},{value:"string",paraId:4,tocIndex:1},{value:"[]",paraId:4,tocIndex:1},{value:"The children of combo, which can be nodes or combos",paraId:5,tocIndex:1},{value:"boolean",paraId:6,tocIndex:2},{value:"Whether to show the marker when the combo is collapsed",paraId:7,tocIndex:2},{value:"number | [number, number] | Float32Array | [number, number, number]",paraId:8,tocIndex:3},{value:"The default size of combo when collapsed",paraId:9,tocIndex:3},{value:"number | number[]",paraId:10,tocIndex:4},{value:"The padding of combo, only effective when expanded",paraId:11,tocIndex:4},{value:"number | [number, number] | Float32Array | [number, number, number]",paraId:12,tocIndex:5},{value:"The default size of combo when expanded",paraId:13,tocIndex:5},{value:"Prefix",paraId:14,tocIndex:5},{value:"BaseStyleProps",paraId:15},{value:"Except for the properties explicitly listed below, other supported properties are seen: ",paraId:16},{value:"BaseStyleProps",paraId:16},{value:"More about ",paraId:17},{value:"Prefix",paraId:17},{value:" generic usage, see ",paraId:17},{value:"Prefix",paraId:18},{value:"Prefix",paraId:19},{value:"CollapsedMarkerStyleProps",paraId:20},{value:"Except for the properties explicitly listed below, other supported properties are seen: ",paraId:21},{value:"BaseStyleProps",paraId:21},{value:", ",paraId:21},{value:"TextStyleProps",paraId:21},{value:", ",paraId:21},{value:"ImageStyleProps",paraId:21},{value:"(Excludes z )",paraId:21},{value:"More about ",paraId:22},{value:"Prefix",paraId:22},{value:" generic usage, see ",paraId:22},{value:"Prefix",paraId:23},{value:"'child-count' | 'descendant-count' | 'node-count' | ((children:",paraId:24,tocIndex:8},{value:" ",paraId:24,tocIndex:8},{value:"NodeData | ComboData",paraId:24,tocIndex:8},{value:"[]) => string)",paraId:24,tocIndex:8},{value:"The type of marker displayed when the combo is collapsed",paraId:25,tocIndex:8},{value:"'child-count'",paraId:26,tocIndex:8},{value:": Number of child elements (including Nodes and Combos)",paraId:26,tocIndex:8},{value:"'descendant-count'",paraId:27,tocIndex:8},{value:": Number of descendant elements (including Nodes and Combos)",paraId:27,tocIndex:8},{value:"'node-count'",paraId:28,tocIndex:8},{value:": Number of descendant elements (only Nodes)",paraId:28,tocIndex:8},{value:"(children: NodeLikeData[]) => string",paraId:29,tocIndex:8},{value:": Custom processing logic",paraId:29,tocIndex:8}];}}]);
//# sourceMappingURL=fdccfbb1-async.0ecbb995.js.map