(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["98f73076"],{"98f73076":function(e,n,a){"use strict";a.d(n,"__esModule",{value:!0}),a.d(n,"texts",{enumerable:!0,get:function(){return t;}}),a("e4bf22d0");let t=[{value:" Please note that when calculating the control points, the distance on the x-axis is mainly considered, and the change on the y-axis is ignored",paraId:0},{value:"createGraph(\n  {\n    data: {\n      nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }, { id: 'node6' }],\n      edges: [\n        { source: 'node1', target: 'node2' },\n        { source: 'node1', target: 'node3' },\n        { source: 'node1', target: 'node4' },\n        { source: 'node1', target: 'node5' },\n        { source: 'node1', target: 'node6' },\n      ],\n    },\n    node: {\n      style: { port: true, ports: [{ placement: 'left' }, { placement: 'right' }] },\n    },\n    edge: { type: 'cubic-horizontal' },\n    behaviors: ['drag-canvas', 'drag-element'],\n    plugins: ['grid-line'],\n    layout: {\n      type: 'antv-dagre',\n      begin: [100, 50],\n      rankdir: 'LR',\n      nodesep: 15,\n      ranksep: 100,\n    },\n  },\n  { width: 600, height: 400 },\n  (gui, graph) => {\n    gui.add({ type: 'cubic-horizontal' }, 'type').disable();\n\n    const options = {\n      curveOffset: 20,\n      curvePosition: 0.5,\n    };\n    const optionFolder = gui.addFolder('cubic-horizontal.style');\n    optionFolder.add(options, 'curveOffset', 0, 100);\n    optionFolder.add(options, 'curvePosition', 0, 1);\n\n    optionFolder.onChange(({ property, value }) => {\n      graph.updateEdgeData((prev) => prev.map((edge) => ({ ...edge, style: { [property]: value } })));\n      graph.render();\n    });\n  },\n);\n",paraId:1},{value:"If the element has its specific properties, we will list them below. For all generic style attributes, see ",paraId:2},{value:"BaseEdge",paraId:3},{value:"number | [number, number]",paraId:4,tocIndex:0},{value:" ",paraId:4,tocIndex:0},{value:"Default:",paraId:4,tocIndex:0},{value:" ",paraId:4,tocIndex:0},{value:"[0, 0]",paraId:4,tocIndex:0},{value:"The distance of the control point from the line",paraId:5,tocIndex:0},{value:"number | [number, number]",paraId:6,tocIndex:1},{value:" ",paraId:6,tocIndex:1},{value:"Default:",paraId:6,tocIndex:1},{value:" ",paraId:6,tocIndex:1},{value:"[0.5, 0.5]",paraId:6,tocIndex:1},{value:"The relative position of the control point on the line, ranging from ",paraId:7,tocIndex:1},{value:"0-1",paraId:7,tocIndex:1}];}}]);
//# sourceMappingURL=98f73076-async.f8d75f8f.js.map