{"version":3,"sources":["docs/api/layouts/MdsLayout.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/api/layouts/MdsLayout.en.md?watch=parent';\n  export const texts = [{\"value\":\"Example\",\"paraId\":0},{\"value\":\"// Assign layout options when initialization. const layout = new MDSLayout(\",\"paraId\":1},{\"value\":\"{ center: [100, 100] }\",\"paraId\":1},{\"value\":\"); const positions = await layout.execute(graph); // { nodes: [], edges: [] }\",\"paraId\":1},{\"value\":\"// Or use different options later. const layout = new MDSLayout(\",\"paraId\":2},{\"value\":\"{ center: [100, 100] }\",\"paraId\":2},{\"value\":\"); const positions = await layout.execute(graph, { rows: 20 }\",\"paraId\":2},{\"value\":\"); // { nodes: [], edges: [] }\",\"paraId\":2},{\"value\":\"// If you want to assign the positions directly to the nodes, use assign method. await layout.assign(graph, { center: [100, 100] }\",\"paraId\":3},{\"value\":\");\",\"paraId\":3},{\"value\":\"PointTuple\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"Center position of circular layout\",\"paraId\":5,\"tocIndex\":1},{\"value\":\"number\",\"paraId\":6,\"tocIndex\":2},{\"value\":\"Ideal length of the edge, which can be understood as the length of the edge as a spring under no force 200\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"To directly assign the positions to the nodes.\",\"paraId\":8,\"tocIndex\":4},{\"value\":\"assign(graph: Graph, options?: MDSLayoutOptions): Promise<void>;\\n\",\"paraId\":9,\"tocIndex\":4},{\"value\":\"View Parameters\",\"paraId\":10},{\"value\":\"Parameter\",\"paraId\":11,\"tocIndex\":4},{\"value\":\"Type\",\"paraId\":12,\"tocIndex\":4},{\"value\":\"Description\",\"paraId\":13,\"tocIndex\":4},{\"value\":\"graph\",\"paraId\":14,\"tocIndex\":4},{\"value\":\"Graph\",\"paraId\":15,\"tocIndex\":4},{\"value\":\"options\",\"paraId\":16,\"tocIndex\":4},{\"value\":\"MDSLayoutOptions\",\"paraId\":17,\"tocIndex\":4},{\"value\":\"Returns\",\"paraId\":18,\"tocIndex\":4},{\"value\":\":\",\"paraId\":18,\"tocIndex\":4},{\"value\":\"Type:\",\"paraId\":19,\"tocIndex\":4},{\"value\":\" Promise<void>\",\"paraId\":19,\"tocIndex\":4},{\"value\":\"Return the positions of nodes and edges(if needed).\",\"paraId\":20,\"tocIndex\":5},{\"value\":\"execute(graph: Graph, options?: MDSLayoutOptions): Promise<LayoutMapping>;\\n\",\"paraId\":21,\"tocIndex\":5},{\"value\":\"View Parameters\",\"paraId\":10},{\"value\":\"Parameter\",\"paraId\":22,\"tocIndex\":5},{\"value\":\"Type\",\"paraId\":23,\"tocIndex\":5},{\"value\":\"Description\",\"paraId\":24,\"tocIndex\":5},{\"value\":\"graph\",\"paraId\":25,\"tocIndex\":5},{\"value\":\"Graph\",\"paraId\":26,\"tocIndex\":5},{\"value\":\"options\",\"paraId\":27,\"tocIndex\":5},{\"value\":\"MDSLayoutOptions\",\"paraId\":28,\"tocIndex\":5},{\"value\":\"Returns\",\"paraId\":29,\"tocIndex\":5},{\"value\":\":\",\"paraId\":29,\"tocIndex\":5},{\"value\":\"Type:\",\"paraId\":30,\"tocIndex\":5},{\"value\":\" Promise<LayoutMapping>\",\"paraId\":30,\"tocIndex\":5}];\n  "],"names":[],"mappings":"+PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,UAAU,OAAS,CAAC,EAAE,CAAC,MAAQ,8EAA8E,OAAS,CAAC,EAAE,CAAC,MAAQ,yBAAyB,OAAS,CAAC,EAAE,CAAC,MAAQ,gFAAgF,OAAS,CAAC,EAAE,CAAC,MAAQ,mEAAmE,OAAS,CAAC,EAAE,CAAC,MAAQ,yBAAyB,OAAS,CAAC,EAAE,CAAC,MAAQ,gEAAgE,OAAS,CAAC,EAAE,CAAC,MAAQ,iCAAiC,OAAS,CAAC,EAAE,CAAC,MAAQ,qIAAqI,OAAS,CAAC,EAAE,CAAC,MAAQ,KAAK,OAAS,CAAC,EAAE,CAAC,MAAQ,aAAa,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,qCAAqC,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,6GAA6G,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,iDAAiD,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,qEAAqE,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,kBAAkB,OAAS,EAAE,EAAE,CAAC,MAAQ,YAAY,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,cAAc,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,UAAU,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,mBAAmB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,UAAU,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,iBAAiB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,sDAAsD,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,+EAA+E,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,kBAAkB,OAAS,EAAE,EAAE,CAAC,MAAQ,YAAY,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,cAAc,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,UAAU,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,mBAAmB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,UAAU,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,0BAA0B,OAAS,GAAG,SAAW,CAAC,EAAE"}